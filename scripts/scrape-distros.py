#!/usr/bin/env python3
"""
OrbStack Linux Distributions Scraper

This script scrapes the OrbStack documentation page to extract and display
the list of supported Linux distributions. It specifically targets the
first meaningful unordered list containing the distribution names.

The script handles Vue.js/VitePress pages by filtering out empty component
placeholders and focusing on content-rich list elements.

Usage:
    python scripts/scrape-distros.py

Dependencies:
    - requests: For HTTP requests
    - beautifulsoup4: For HTML parsing

Author: Generated by AI Assistant
"""

import requests
from bs4 import BeautifulSoup


def print_first_unordered_list(url):
    """
    Scrape a webpage and print the first meaningful unordered list found.

    This function fetches the HTML content from the specified URL, parses it,
    and identifies the first unordered list that contains actual content.
    It specifically filters out empty Vue.js component placeholders and
    focuses on lists with meaningful list items.

    Args:
        url (str): The URL of the webpage to scrape

    Returns:
        None: Prints the list items to stdout

    Raises:
        requests.HTTPError: If the HTTP request fails (e.g., 404, 500 errors)
        requests.RequestException: For other request-related errors

    Example:
        >>> print_first_unordered_list("https://docs.orbstack.dev/machines/distros")
        1. Alma
        2. Alpine
        3. Arch
        ...
    """
    # Fetch page content
    response = requests.get(url)
    response.raise_for_status()  # Raise error if the request failed

    # Parse the HTML content
    soup = BeautifulSoup(response.content, "html.parser")

    # Find all unordered lists
    all_uls = soup.find_all("ul")

    # Look for the first meaningful list (skip empty Vue.js components)
    meaningful_list = None
    for ul in all_uls:
        # Skip empty lists or Vue.js component placeholders
        if (
            ul.get_text(strip=True)
            and not ul.get("class")
            and len(ul.find_all("li")) > 0
        ):
            meaningful_list = ul
            break

    if meaningful_list:
        # Get all list items
        list_items = meaningful_list.find_all("li")

        # Extract and sort the text content
        items_text = []
        for item in list_items:
            text = item.get_text(strip=True)
            items_text.append(text.lower())

        # Sort the items alphabetically
        items_text.sort()

        # Print each item with proper formatting (lowercase)
        for i, text in enumerate(items_text, 1):
            print(f"{i:2d}. {text}")
    else:
        print(f"No meaningful unordered list found on {url}")


if __name__ == "__main__":
    url = "https://docs.orbstack.dev/machines/distros"
    print_first_unordered_list(url)
